job_listings.split("\n").reject { |c| c.empty? }
job_listings.split("\n").flatten
job_listings.split("\n").compact
job_listings.split("\n")
job_listings.split(" ")

job_listings
quit
job_listings = parsed_page.xpath('/html/body/div[3]/div[1]/div[2]/div').first.children.children.children.children.children.textquit
job_listings = parsed_page.xpath('/html/body/div[3]/div[1]/div[2]/div').first.children.children.children.children.children.text
job_listings
quit
per_page = parsed_page.xpath('/html/body/div[3]/div[1]//div').count
per_page = parsed_page.xpath('/html/body/div[3]/div[1]/div[2]/div').count
per_page = parsed_page.xpath('/html/body/div[3]/div[1]/div[2]/div[1]/div').first.count
per_page
quit
job_listings
quit
job_listings.first.children.children.children.children.children.children.text
job_listings.first.children.children.children.children.children.children
job_listings.first.children.children.children
job_listings.first.children.children
job_listings.first.children
job_listings.first.children.first
job_listings.first
job_listings.count
job_listings
quit
parsed_page.css('.list-group').content
parsed_page.css('.list-group').count
parsed_page.css('.list-group').text
parsed_page.css('.list-group')
parsed_page
job_listings
quit
parsed_page.css('.list-group')
parsed_page.css('option')
parsed_page.css('html body div.push div.container-fluid div.container div.row.mar-b-20 div.col-md-6.pad-b-35.box-shadow form#recherche div.form-group div.selectize-control.form-control.single div.selectize-dropdown.single.form-control')
unparsed_page.form
unparsed_page.body
unparsed_page
[16, 50, "Urologue pédiatrique"]
[16, 49, "Urologue"],
[16, 47, "Traumato-orthopédiste pédiatrique", 2],
[16, 48, "Traumato-orthopédiste"],
[16, 46, "Stomatologue"],
[16, 45, "Sexologue"],
[16, 42, "Rhumatologue"],
[16, 87, "Rééducation fonctionnelle", 2],
[16, 44, "Réanimateur pédiatrique", 2],
[16, 43, "Réanimateur médical", 2],
[16, 41, "Radiothérapeute"],
[16, 40, "Radiologue"], 
[16, 77, "Psychologue"],
[16, 39, "Psychiatre"],
[16, 55, "Proctologue"],
[16, 76, "Podologue"],
[16, 38, "Pneumo-phtysio-allergologue"],
[16, 51, "Phlébologue"],
[16, 52, "Pédiatre"],
[16, 67, "Ostéopathe"],
[16, 75, "Orthoptiste"],
[16, 74, "Orthophoniste"],
[16, 85, "ORL"],
[16, 99, "Optométriste"],
[16, 53, "Ophtalmologue"],
[16, 36, "Oncologue médical", 2],
[16, 35, "Onco-cancerologue"],
[16, 73, "Nutritionniste"],
[16, 31, "Neurologue"], 
[16, 101, "Neuro-psychiatre"],
[16, 100, "Neuro-physiologiste"],
[16, 30, "Neuro-chirurgien"],
[16, 34, "Néphrologue pédiatrique", 2],
[16, 33, "Néphrologue"],
[16, 91, "Médecine esthétique"],
[16, 29 "Médecin physique et de réadaptation", 5],
[16, 28, "Médecin nucléaire", 2],
[16, 27, "Médecin légiste", 2],  
[16, 26, "Médecin interniste", 2], 
[16, 1, "Médecin géneraliste", 2],  
[16, 25, "Médecin du travail", 3],  
[16, 24, "Médecin du sport", 3],
[16, 7, "Médecin Biologiste Laboratoire", 3],  
[16, 92, "Maladies et Chirurgie CardioVasculaire", 4],  
[16, 72, "Kinésithérapeute"],  
[16, 83, "Infectiologue"],  
[16, 56, "Hépatologue"], 
[16, 23, "Hématologue"], 
[16, 58, "Gynéco-obstetricien"],  
[16, 22, "Gérontologue-gériatre"],
[16, 21, "Généticien"],
[16, 20, "Gastro-entéro-hepatologue"],
[16, 19, "Endocrino-diabetologue"],
[16, 70, "Diététicien"],
[16, 54, "Dermato-vénérologue", 2],
[16, 97, "Clinique spécialisée", 2],
[16, 95, "Clinique médico-chirurgicale", 2],
[16, 94, "Clinique médicale", 2],
[16, 96, "Clinique d’hémodialyse", 2],
[16, 93, "Clinique chirurgicale", 2],
[16, 17, "Chirurgien viscérale pédiatrique", 3],
[16, 16, "Chirurgien viscérale", 2],
[16, 15, "Chirurgien vasculaire", 2],
[16, 14, "Chirurgien thoracique", 2],
[16, 90, "Chirurgien Pédiatrique", 2],
[16, 13, "Chirurgien maxillo-facial", 2],
[16, 81, "Chirurgien infantile", 2],
[16, 80, "Chirurgien généraliste", 2],
[16, 12, "Chirurgien esthétique et plastique", 4],
[16, 65, "Chirurgien dentiste", 2],
[16, 11, "Chirurgien cardiaque pédiatrique", 3],
[16, 10, "Chirurgien cardiaque", 2],
[16, 69 "Chiropracteur"],
[16, 89, "Centre d'imagerie médicale", 2],
[16, 9, "Cardiologue pédiatrique", 2],
[16, 8, "Cardiologue"],
[16, 68, "Audioprothésiste"],
[16, 5, "Angiologue"],
[16, 4, "Anesthésiste-réanimateur"],
[16, 3, "Anatomopathologiste"],
[16, 2, "Allergologue"],
[16, 57, "Algologue"],
[16, 98, "Acupuncteur"],
parsed_page
quit
parsed_page.text
parsed_page
job_listings
joblistings
quit
job_listings
url
quit
@total
quit
@total
quit
@values << total
@values
quit
values
quit
  end
    total_full += total
    scrapper(id_1: value[0], id_2: value[1], type: value[2], number: value[3], total: 1)
VALUES.each do |value|
scrapper(id_1: value[0], id_2: value[1], type: value[2], number: value[3], total: 1)
VALUES.count
VALUES
quit
counter
quit
qui
number
quit
job.first.split[0..-2]
job.first.split[0..-1]
job.first.split[0.., 1]
job.first.split[0, 1]
job.first.split[-1, 1]
job.first.split[1, -1]
job.first.split
job.first
quit
job.first.strip.split[0..-3]
job.first.strip.split.slice!(-2, 2)
job.first.strip.slice!(-2, 2)
job.first.strip.split[-2, 4]
job.first.strip.split[-1, 4]
job.first.strip.split[-1, 0]
job.first.strip.split[-1, 1]
job.first.strip.split[-1, 2]
job.first.strip.split[-1, 3]
job.first.strip.split[0, 3]
job.first.strip.split[0, 2]
job.first.strip.split[1, 2]
job.first.strip.split[1, 0]
job.first.strip.split[1, 1]
job.first.strip.split[1, -1]
job.first.strip.split[3, -1]
job.first.strip.split.[3, -1]
job.first.strip.split.pop(2)
job.first.strip.split
job.first.strip.split.map{ |value| type  }
job.first.strip.split.map{ |value| value == type  }
job.first.strip.split.map{ |value| value }
job.first.strip.split.reject{ |value| value }
job.first.strip.split.reject{ |value| value == type }
job.first.strip.split
type = "Pharmacien generale"
type
job.first.strip.split
job.strip.first.strip
job.first.strip
job.first
j = job.first << "generale"
job.first.strip
job.first
quit
g.reject{ |job| job == type.split  }.join(' ')
g.reject{ |job| job == type  }.join(' ')
g
g.reject{ |job| job == type  }.join(' ')
type = "Pharmacien generale"
type
type = "generale"
g.reject{ |job| job == type  }.join(' ')
job
g.reject{ |job| job == 'Pharmacien generale' }.join(' ')
g = job.first.split << "generale"
g
g.pop
g = job.first.split << ["generale"]
job.first.split
number
job.first.split.reject{ |job| job == 'Pharmacien' }.join(' ')
job.first.split.reject{ |job| job == 'type' }.join(' ')
quit
job.first.split.reject{ |job| job == type }
job.first.split
job.first
quit
job[1].split(" ").last.tr("0-9", "")
job[1].split(" ").last.delete('^0-9')
job[1].split(" ").last
job[1].split(" ")
job[1]
job
job.last
job.last.split.last
job.last.split.last.delete('^0-9')
job.last.split.last.str.delete('^0-9')
quit
job.first.split.reject{ |k| k == "Pharmacien"}
job.first.split..reject{ |k| k == "Pharmacien"}
job.first.split.delete_at(2)
job.first.split.pop
job.first.split
job.first
job
quit
job
quit
job
quit
job
quit
data_hash.to_a
data_hash
quit
job_listing.children[0].children[0].children[3].text
job_listing.children[0].children[0].children[2].text
job_listing.children[0].children[0].children[1].text
job_listing.children[0].children[0].children[0].text
